{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": ["api_keys", "models", "agents", "memory", "communication", "context_fusion", "workflow", "integrations"],
    "properties": {
        "api_keys": {
            "type": "object",
            "required": ["gemini", "openai", "anthropic"],
            "properties": {
                "gemini": {"type": "string"},
                "openai": {"type": "string"},
                "anthropic": {"type": "string"}
            }
        },
        "models": {
            "type": "object",
            "required": ["gemini", "openai", "anthropic"],
            "properties": {
                "gemini": {
                    "type": "object",
                    "required": ["temperature", "top_k", "top_p"],
                    "properties": {
                        "temperature": {"type": "number", "minimum": 0, "maximum": 1},
                        "top_k": {"type": "integer", "minimum": 1},
                        "top_p": {"type": "number", "minimum": 0, "maximum": 1}
                    }
                },
                "openai": {
                    "type": "object",
                    "required": ["model", "temperature", "max_tokens"],
                    "properties": {
                        "model": {"type": "string"},
                        "temperature": {"type": "number", "minimum": 0, "maximum": 1},
                        "max_tokens": {"type": "integer", "minimum": 1}
                    }
                },
                "anthropic": {
                    "type": "object",
                    "required": ["model", "temperature", "max_tokens"],
                    "properties": {
                        "model": {"type": "string"},
                        "temperature": {"type": "number", "minimum": 0, "maximum": 1},
                        "max_tokens": {"type": "integer", "minimum": 1}
                    }
                }
            }
        },
        "agents": {
            "type": "object",
            "required": ["max_concurrent_tasks", "task_timeout", "memory_size", "max_retries"],
            "properties": {
                "max_concurrent_tasks": {"type": "integer", "minimum": 1},
                "task_timeout": {"type": "integer", "minimum": 1},
                "memory_size": {"type": "integer", "minimum": 1},
                "max_retries": {"type": "integer", "minimum": 0}
            }
        },
        "memory": {
            "type": "object",
            "required": ["max_size", "ttl", "cleanup_interval", "cache_size"],
            "properties": {
                "max_size": {"type": "integer", "minimum": 1},
                "ttl": {"type": "integer", "minimum": 1},
                "cleanup_interval": {"type": "integer", "minimum": 1},
                "cache_size": {"type": "integer", "minimum": 1}
            }
        },
        "communication": {
            "type": "object",
            "required": ["max_messages", "message_ttl", "priority_levels"],
            "properties": {
                "max_messages": {"type": "integer", "minimum": 1},
                "message_ttl": {"type": "integer", "minimum": 1},
                "priority_levels": {
                    "type": "array",
                    "items": {"type": "string"},
                    "minItems": 1
                }
            }
        },
        "context_fusion": {
            "type": "object",
            "required": ["max_contexts", "context_ttl"],
            "properties": {
                "max_contexts": {"type": "integer", "minimum": 1},
                "context_ttl": {"type": "integer", "minimum": 1}
            }
        },
        "workflow": {
            "type": "object",
            "required": ["max_agents", "max_tasks", "timeout", "retry_attempts"],
            "properties": {
                "max_agents": {"type": "integer", "minimum": 1},
                "max_tasks": {"type": "integer", "minimum": 1},
                "timeout": {"type": "integer", "minimum": 1},
                "retry_attempts": {"type": "integer", "minimum": 0}
            }
        },
        "integrations": {
            "type": "object",
            "required": ["slack", "github", "jira", "discord"],
            "properties": {
                "slack": {
                    "type": "object",
                    "required": ["bot_token", "app_token", "channel_id"],
                    "properties": {
                        "bot_token": {"type": "string"},
                        "app_token": {"type": "string"},
                        "channel_id": {"type": "string"}
                    }
                },
                "github": {
                    "type": "object",
                    "required": ["token", "repo_owner", "repo_name"],
                    "properties": {
                        "token": {"type": "string"},
                        "repo_owner": {"type": "string"},
                        "repo_name": {"type": "string"}
                    }
                },
                "jira": {
                    "type": "object",
                    "required": ["server", "email", "api_token"],
                    "properties": {
                        "server": {"type": "string", "format": "uri"},
                        "email": {"type": "string", "format": "email"},
                        "api_token": {"type": "string"}
                    }
                },
                "discord": {
                    "type": "object",
                    "required": ["token", "guild_id"],
                    "properties": {
                        "token": {"type": "string"},
                        "guild_id": {"type": "string"}
                    }
                }
            }
        }
    }
} 